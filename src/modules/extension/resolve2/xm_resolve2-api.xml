<!--
  xm_resolve2

  This file is NOT part of the nxlog log collector tool.
  See the file LICENSE in the source root for licensing terms.

  Work on this module has been inspired by the documentation of the NXLog's Enterprise Module xm_resolver
  Author: 2019 Stephan Seitz <s.seitz@mailbox.org>
-->
<declarations>
 <module>xm_resolve2</module>
 <include>../../../common/expr.h</include>
 <include>../../../common/module.h</include>

 <function>
   <name>gid_to_name</name>
   <type>global</type>
   <cb>nx_expr_func__xm_resolve2_gid_to_name</cb>
   <rettype>string</rettype>
   <arg>
    <name>gid</name>
    <type>integer</type>
   </arg>
   <description>
     <en>
Return the group name assigned to the group ID. If gid cannot
be looked up, undef is returned.
     </en>
   </description>
 </function>

 <function>
   <name>gid_to_name</name>
   <type>global</type>
   <cb>nx_expr_func__xm_resolve2_gid_to_name</cb>
   <rettype>string</rettype>
   <arg>
    <name>gid</name>
    <type>string</type>
   </arg>
   <description>
     <en>
Return the group name assigned to the string gid on Unix. If
gid cannot be looked up, undef is returned.
     </en>
   </description>
 </function>

 <function>
   <name>group_get_gid</name>
   <type>global</type>
   <cb>nx_expr_func__xm_resolve2_group_get_gid</cb>
   <rettype>integer</rettype>
   <arg>
    <name>groupname</name>
    <type>string</type>
   </arg>
   <description>
     <en>
Return the group ID assigned to the group name.
     </en>
   </description>
 </function>

 <function>
   <name>ipaddr_to_name</name>
   <type>global</type>
   <cb>nx_expr_func__xm_resolve2_ipaddr_to_name</cb>
   <rettype>string</rettype>
   <arg>
    <name>ipaddr</name>
    <type>string</type>
   </arg>
   <description>
     <en>
Resolve and return the DNS name assigned to the IP address. The
ipaddr argument can be either a string or an ip4addr type.
     </en>
   </description>
 </function>

 <function>
   <name>name_to_ipaddr</name>
   <type>global</type>
   <cb>nx_expr_func__xm_resolve2_name_to_ipaddr</cb>
   <rettype>string</rettype>
   <arg>
    <name>name</name>
    <type>string</type>
   </arg>
   <description>
     <en>
Resolve and return the first IPv4 or IPv6 address assigned to name.
Here, xm_resolve2 differs from xm_resolver. Despite returing an
ip4addr xm_resolve2 returns a string. Casting to ip4addr/ip6addr
needs to be done in nxlog config language.
     </en>
   </description>
 </function>

 <function>
   <name>uid_to_name</name>
   <type>global</type>
   <cb>nx_expr_func__xm_resolve2_uid_to_name</cb>
   <rettype>string</rettype>
   <arg>
    <name>uid</name>
    <type>integer</type>
   </arg>
   <description>
     <en>
Return the username corresponding to the user ID. If uid cannot
be looked up, undef is returned.
     </en>
   </description>
 </function>

 <function>
   <name>uid_to_name</name>
   <type>global</type>
   <cb>nx_expr_func__xm_resolve2_uid_to_name</cb>
   <rettype>string</rettype>
   <arg>
    <name>uid</name>
    <type>string</type>
   </arg>
   <description>
     <en>
Return the username corresponding to the user ID or SID. This function
takes a string which is normally a SID on Windows or an integer UID on Unix.
Despite the xm_resolver, xm_resolve2 does not return DOMAIN/USER on Windows.
If uid cannot be looked up, undef is returned.
     </en>
   </description>
 </function>

 <function>
   <name>user_get_gid</name>
   <type>global</type>
   <cb>nx_expr_func__xm_resolve2_user_get_gid</cb>
   <rettype>integer</rettype>
   <arg>
    <name>username</name>
    <type>string</type>
   </arg>
   <description>
     <en>
Return the userâ€™s primary group ID (the group ID assigned to username).
     </en>
   </description>
 </function>

 <function>
   <name>user_get_uid</name>
   <type>global</type>
   <cb>nx_expr_func__xm_resolve2_user_get_uid</cb>
   <rettype>integer</rettype>
   <arg>
    <name>username</name>
    <type>string</type>
   </arg>
   <description>
     <en>
Return the user ID assigned to username.
     </en>
   </description>
 </function>

</declarations>
